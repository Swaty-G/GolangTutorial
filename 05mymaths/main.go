package main

import (
	"fmt"
	"math/big"
	//"math/rand"
	"crypto/rand"
)

// this function is used to generate a random number between 0 and 4 using the math/rand package or crypto/rand package in Go, using crypto is more secure than using math/rand package as it generates cryptographically secure random numbers which are more secure than the random numbers generated by the math/rand package but it is slower than the math/rand package as it generates random numbers using cryptographic algorithms which are slower than the random numbers generated by the math/rand package which uses pseudo-random number generators
func main() {
	fmt.Println("Welcome to my maths in golang")

	//var mynumberOne int = 5
	//var mynumberTwo float64 = 10
	//fmt.Println("The sum of", mynumberOne, "and", mynumberTwo, "is", mynumberOne+mynumberTwo) // error: invalid operation: mynumberOne + mynumberTwo (mismatched types int and float64) because you can't add an integer and a floating-point number directly in Go, you have to convert one of them to the other type to perform the addition operation

	//random number from math/rand

	/*rand.Seed(time.Now().UnixNano()) // seed is a starting point for the random number generator, it is the current time in nanoseconds, so it will generate a random number every time you run the program
	fmt.Println(rand.Intn(5) + 1)    // prints a random number between 0 and 4, as the upper limit is exclusive in the rand.Intn() function and adds 1 to the random number to get a number between 1 and 5*/

	//random number from crypto/rand

	myRandomNumber, _ := rand.Int(rand.Reader, big.NewInt(5)) // rand.Int() is a function that generates a random number between 0 and n-1, where n is the number passed as the second argument to the function, rand.Reader is a global, shared instance of a cryptographically secure random number generator, big.NewInt() is a function that creates a new big integer with the value n, _ is used to ignore the error returned by the function as we are not handling it here
	fmt.Println(myRandomNumber)                               // prints a random number between 0 and 4

}
